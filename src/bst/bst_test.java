/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * bst_test.java
 *
 * Created on Feb 15, 2014, 8:32:51 PM
 */

package bst;

/**
 *
 * @author ranjana
 */
import business.*;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
//import javax.swing.table.TableModel;

public class bst_test extends javax.swing.JFrame  {

    /** Creates new form bst_test */
    //short_key sk = new short_key();
    busines_layer bl = new busines_layer();
    BinarySearchTree tree = new BinarySearchTree();
    DefaultTableModel model ;
    private List myList = new ArrayList();
    private List arr = new ArrayList();
    private int count;
    private String val1,val2,val3,val4,s_val;
    String[] split_val = new String[4];

    public bst_test() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        setResizable(false);
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        test_btn = new javax.swing.JButton();
        test_txt = new javax.swing.JTextField();
        search_btn = new javax.swing.JButton();
        del_btn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        bs_table = new javax.swing.JTable();
        aname_txt = new javax.swing.JTextField();
        sname_txt = new javax.swing.JTextField();
        isbn_txt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        clear_btn = new javax.swing.JButton();
        all_btn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        fall_jtable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        test_btn.setText("Insert");
        test_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                test_btnMouseClicked(evt);
            }
        });
        test_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                test_btnActionPerformed(evt);
            }
        });

        test_txt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                test_txtMouseClicked(evt);
            }
        });

        search_btn.setText("Find");
        search_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_btnActionPerformed(evt);
            }
        });

        del_btn.setText("Delete");
        del_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                del_btnActionPerformed(evt);
            }
        });

        bs_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book Title", "Author Name", "Surname", "ISBN"
            }
        ));
        bs_table.setEnabled(false);
        bs_table.setName(""); // NOI18N
        jScrollPane1.setViewportView(bs_table);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Book Title");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Author Name");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Surname");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("ISBN");

        clear_btn.setText("clear");
        clear_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_btnActionPerformed(evt);
            }
        });

        all_btn.setText("Find All");
        all_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                all_btnActionPerformed(evt);
            }
        });

        fall_jtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book Title", "Author Name", "Surname", "ISBN"
            }
        ));
        fall_jtable.setToolTipText("Find All");
        fall_jtable.setEnabled(false);
        jScrollPane2.setViewportView(fall_jtable);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Find All :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(test_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(search_btn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(del_btn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clear_btn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(all_btn))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(isbn_txt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sname_txt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(aname_txt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(test_txt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE))
                        .addGap(30, 30, 30))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(test_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aname_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sname_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(isbn_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(test_btn)
                    .addComponent(search_btn)
                    .addComponent(del_btn)
                    .addComponent(clear_btn)
                    .addComponent(all_btn))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void test_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_test_btnMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_test_btnMouseClicked

    private void test_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_test_btnActionPerformed
        // TODO add your handling code here:
       check_insert();
    }//GEN-LAST:event_test_btnActionPerformed

    private void del_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_del_btnActionPerformed
        // TODO add your handling code here:
        delete();
    }//GEN-LAST:event_del_btnActionPerformed

    public String find_row(String val)
    {
    String total="";
    DefaultTableModel dataModel = (DefaultTableModel) bs_table.getModel();
    int count_row = dataModel.getRowCount();
        for(int i = 0;i<count_row;i++)
        {
        String data = (String)bs_table.getValueAt(i, 0);
        if( data.equals(val))
        {
        val1 = (String)bs_table.getValueAt(i, 0);
        val2 = (String)bs_table.getValueAt(i, 1);
        val3 = (String)bs_table.getValueAt(i, 2);
        val4 = (String)bs_table.getValueAt(i, 3);

        total = val1+"-"+val2+"-"+val3+"-"+val4;
        }

        }
    return total;
    }

    public void remove_all_row()
    {
        DefaultTableModel dataModel = (DefaultTableModel) bs_table.getModel();
        int size = bs_table.getRowCount();

        if(size > 0)
        {
        dataModel.getDataVector().removeAllElements();
        }

    }

    private void search_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_btnActionPerformed
        // TODO add your handling code here:
        search();
        
    }//GEN-LAST:event_search_btnActionPerformed

    public void insert()
    {
        DefaultTableModel dataModel = (DefaultTableModel) bs_table.getModel();

        val1 = test_txt.getText();
        val2 = aname_txt.getText();
        val3 = sname_txt.getText();
        val4 = isbn_txt.getText();
        
        test_txt.setText("");
        aname_txt.setText("");
        sname_txt.setText("");
        isbn_txt.setText("");
        
        String tot = val1+"-"+val2+"-"+val3+"-"+val4;
        arr.add(tot);

        String status = "insert";
        myList = bst.BinarySearchTree.run_p(arr,status);
        count = myList.size();
        remove_all_row();

        for(int i = 0;i<count ; i++)
        {
        s_val = String.valueOf(myList.get(i));
        int s = 0;

        for (String retval: s_val.split("-")){
            split_val[s] = retval;
            ++s;
        }

        s = 0;

        val1 = split_val[0];
        val2 = split_val[1];
        val3 = split_val[2];
        val4 = split_val[3];

        dataModel.addRow(new Object[]{val1,val2,val3,val4});

        }
        
        count = 0;
        myList.clear();
        
    }

    public void search()
    {
        DefaultTableModel dataModel = (DefaultTableModel) bs_table.getModel();
        String status = "search";
        int row_place = 0;
        boolean ch = false;

        val1 = test_txt.getText();
        val4 = isbn_txt.getText();

        if(!test_txt.getText().equals("") && isbn_txt.getText().equals(""))
        {
        ch = true;
        myList.add(val1);
        int count_row = dataModel.getRowCount();
        for(int i = 0;i<count_row;i++)
        {
        String data = (String)bs_table.getValueAt(i, 0);
        if( data.equals(val1))
        {
        row_place = i;
        }
        myList.add(data);
        }
        
        }

        else if(!isbn_txt.getText().equals("") && test_txt.getText().equals(""))
        {
        ch = true;
        myList.add(val4);
        int count_row = dataModel.getRowCount();
        for(int i = 0;i<count_row;i++)
        {
        String data = (String)bs_table.getValueAt(i, 3);
        if( data.equals(val4))
        {
        row_place = i;
        }
        myList.add(data);
        }
        
        }

        if(ch)
        {
        myList = bst.BinarySearchTree.run_p(myList,status);
        count = myList.size();
        status = String.valueOf(myList.get(count-1));

        if(status.equals("true"))
        {
            test_txt.setText((String)bs_table.getValueAt(row_place, 0));
            aname_txt.setText((String)bs_table.getValueAt(row_place, 1));
            sname_txt.setText((String)bs_table.getValueAt(row_place, 2));
            isbn_txt.setText((String)bs_table.getValueAt(row_place, 3));
        }

        else
        {
        JOptionPane.showMessageDialog(null, "not found");
        test_txt.setText("");
        aname_txt.setText("");
        sname_txt.setText("");
        isbn_txt.setText("");
        }

        }
        ch = false;
        count = 0;
        myList.clear();
        
    }


    public void delete()
    {
        DefaultTableModel dataModel = (DefaultTableModel) bs_table.getModel();
        String reorder = "";
        String[] value = new String[4];
        int arr_s,arr_s1 = 0;
         
        String status = "delete";
        val1 = test_txt.getText();
        val4 = isbn_txt.getText();

        if(!test_txt.getText().equals("") && isbn_txt.getText().equals(""))
        {
        String d_val = find_row(val1);
        myList.add(d_val);
        count = arr.size();
        
        for(int i = 0;i<count ;i++)
        {
        myList.add(String.valueOf(arr.get(i)));
        }

        count = myList.size();
        myList = bst.BinarySearchTree.run_p(myList,status);
        arr_s = myList.size();
        arr_s1 = arr_s - count;
        arr.clear();

        for(int i = 0;i<arr_s1 ;i++)
        {
        arr.add(String.valueOf(myList.get(count+i)));
        }
        
        int rowCount=dataModel.getRowCount();

        for (int i = 0;i<rowCount;i++)
        {
        dataModel.removeRow(0);
        }
       
        count = arr.size();
        
        for(int i = 0;i<count ; i++)
        {
        reorder = String.valueOf(arr.get(i));
        String[] items = reorder.split("-");
        arr_s = 0;

        for (String item : items)
        {
            System.out.println("item = " + item);
            value[arr_s] = item;
            ++arr_s;
        }

        arr_s = 0;
        val1 = value[0];
        val2 = value[1];
        val3 = value[2];
        val4 = value[3];
        dataModel.addRow(new Object[]{value[0],val2,val3,val4});
        
        }

        }

        else if(!isbn_txt.getText().equals("") && test_txt.getText().equals(""))
        {
        myList.add(val4);
        }

        count = 0;
        myList.clear();

    }

public void find_all()
{
        DefaultTableModel dataModel = (DefaultTableModel) bs_table.getModel();
        DefaultTableModel dataModel1 = (DefaultTableModel) fall_jtable.getModel();

        int count_b = 0;
        val1 = test_txt.getText();
        int count_row = dataModel.getRowCount();

        for(int i = 0;i<count_row;i++)
        {
        String data = (String)bs_table.getValueAt(i, 0);
        myList.add(data);
        }

        count_b = myList.size();
        myList = bst.BinarySearchTree.findall(myList,val1);
        count = myList.size();
        int count_f = count - count_b;
        int rowCount=dataModel1.getRowCount();

        for (int i = 0;i<rowCount;i++)
        {
        dataModel1.removeRow(0);
        }

        for(int i = 0;i<count_f ; i++)
        {

        int tr = Integer.valueOf(String.valueOf(myList.get(count_b+i)));
        val1 = (String)bs_table.getValueAt(tr, 0);
        val2 = (String)bs_table.getValueAt(tr, 1);
        val3 = (String)bs_table.getValueAt(tr, 2);
        val4 = (String)bs_table.getValueAt(tr, 3);
        dataModel1.addRow(new Object[]{val1,val2,val3,val4});
        }

        if(count_f == 0)
        {
            //JOptionPane.showMessageDialog(null, String.valueOf(count_f));
            //dataModel1.removeRow(0);
        }

        count = 0;
        myList.clear();
        
}

public void clear()
{
        DefaultTableModel dataModel1 = (DefaultTableModel) fall_jtable.getModel();

        int rowCount=dataModel1.getRowCount();

        for (int i = 0;i<rowCount;i++)
        {
        dataModel1.removeRow(0);
        }

        test_txt.setText("");
        aname_txt.setText("");
        sname_txt.setText("");
        isbn_txt.setText("");
}


    private void clear_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_btnActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_clear_btnActionPerformed

    private void all_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_all_btnActionPerformed
        // TODO add your handling code here:
        find_all();
    }//GEN-LAST:event_all_btnActionPerformed

    private void test_txtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_test_txtMouseClicked
        // TODO add your handling code here:
        //run_form();
    }//GEN-LAST:event_test_txtMouseClicked

    public void check_insert()
    {

    if( !test_txt.getText().equals("") && !aname_txt.getText().equals("") && !sname_txt.getText().equals("") && !isbn_txt.getText().equals(""))
    {
        insert();
    }

    else
    {
    JOptionPane.showMessageDialog(null, "Fill the all text fields");
    }

    }

   

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //test_txt.addKeyListener(new bst_test());
                new bst_test().setVisible(true);
            }
        });
    }

    public void run_f()
    {
    java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new bst_test().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton all_btn;
    private javax.swing.JTextField aname_txt;
    private javax.swing.JTable bs_table;
    private javax.swing.JButton clear_btn;
    private javax.swing.JButton del_btn;
    private javax.swing.JTable fall_jtable;
    private javax.swing.JTextField isbn_txt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton search_btn;
    private javax.swing.JTextField sname_txt;
    private javax.swing.JButton test_btn;
    public javax.swing.JTextField test_txt;
    // End of variables declaration//GEN-END:variables

   

}


